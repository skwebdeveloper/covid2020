[{"E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\App.js":"1","E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\index.js":"2","E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\reportWebVitals.js":"3","E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\Map.js":"4","E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\Card1.js":"5","E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\Table.js":"6","E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\Graph.js":"7","E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\util.js":"8"},{"size":3973,"mtime":1606675782291,"results":"9","hashOfConfig":"10"},{"size":245,"mtime":1606573617810,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":646,"mtime":1606672099389,"results":"13","hashOfConfig":"10"},{"size":298,"mtime":1606658866462,"results":"14","hashOfConfig":"10"},{"size":405,"mtime":1606625076740,"results":"15","hashOfConfig":"10"},{"size":630,"mtime":1606629445096,"results":"16","hashOfConfig":"10"},{"size":1463,"mtime":1606674871113,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1p3zrml",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\App.js",["39","40","41"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { FormControl, Select,MenuItem, CardContent, Card, Zoom } from \"@material-ui/core\";\nimport Card1 from \"./components/Card1\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport Graph from \"./components/Graph\";\nimport \"leaflet/dist/leaflet.css\";\nimport { startingnumber } from \"./components/util\"\n\n\n\nconst App = () => {\n  const [ countries, setcountries ] = useState([])\n  const [ country, setCountry ] = useState('worldwide')\n  const [ countryInfo, setCountryInfo ] = useState({}) \n  const [ tabledata, setTableData ] = useState([]) \n  const [ mapcenter, setMapcenter ] = useState({lat:34.80746, lng:-40.4796});\n  const [ mapzoom, setmapzoom ] = useState(3);\n  const [ mapcountries, setmapcountries ] = useState([]);\n  \n\n  useEffect(() =>{\n        const getCountry = async () =>{\n          await fetch(\"https://disease.sh/v3/covid-19/countries\")\n          .then((res) => res.json())\n          .then((data) =>{\n               const countries = data.map((country) => (\n                 {\n                   name: country.country,\n                   value: country.countryInfo.iso2\n                 }\n               ));\n               setcountries(countries);\n              //  FOR TABLE \n              setTableData(data);\n              setmapcountries(data);\n          })}\n          getCountry();\n  }, [])\n\nconst onCountryChange = async (e) => {\n  const countryCode = e.target.value;\n  setCountry(countryCode);\n\n  const url = \n  (countryCode === 'worldwide') \n  ? 'https://disease.sh/v3/covid-19/all' \n  : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n  await fetch(url)\n  .then((res) => res.json())\n  .then((data) => {\n    setCountry(countryCode);\n    // All data at once \n    setCountryInfo(data);\n    // Latitude and Longitude\n    setMapcenter([data.countryInfo.lat, data.countryInfo.long]);\n    // Zoom\n    setmapzoom(4);\n  })\n}\n\n\n  return (\n    <div className=\"app\">\n{/* --------------------------------------------------- */}\n\n{/* Left Part  */}\n<div className=\"left__side\">\n    <div className=\"first__row\">\n      <h1 className=\"first__heading\">Covid Tracker</h1>\n      <div className=\"first__dropdown\">\n      <FormControl className=\"app__dropdown\">\n       <Select className=\"app__ul\" \n       variant = \"outlined\" \n       onChange={onCountryChange}\n       value={country}\n       >\n       <MenuItem value=\"worldwide\">\n       <p style=\n       {{ color:'white', \n       fontWeight:800,\n       letterSpacing:'1px' \n        }} \n        className=\"header__menuitem\">\n        Worldwide</p>\n       </MenuItem>\n       {\n         countries.map((country) => (\n           <MenuItem value={country.value}><p className=\"header__menuitem\">{country.name}</p></MenuItem>\n         ))\n       }\n       </Select>  \n      </FormControl>  \n      </div>\n    </div>\n\n{/* --------------------------------------------------- */}\n\n  <div className=\"second__row\">\n    <div className=\"app__cards\">  \n      {/* 3 * Cards   */}\n      <Card1 \n        title = \"Corona\"\n        cases = {countryInfo.todayCases}\n        total = {countryInfo.cases}\n      />\n      <Card1 \n        title = \"Recovered\"\n        cases = {countryInfo.todayRecovered}\n        total = {countryInfo.recovered}\n      />\n      <Card1 \n        title = \"Deaths\"\n        cases = {countryInfo.todayDeaths} \n        total = {countryInfo.deaths}\n      />\n    </div>\n\n  </div>\n\n{/* --------------------------------------------------- */}\n\n<div className=\"third__row\">\n<div className=\"map\">\n<h1>MAP Graphics</h1>\n<Map\ncountries={mapcountries}\ncenter = {mapcenter}\nzoom = {mapzoom}\n />\n</div>\n\n</div>\n</div>\n{/* --------------------------------------------------- */}\n\n{/* Right Part */}\n<div className=\"right__side\">\n    <Card>\n    <CardContent className=\"table\">\n    <h1>Live Cases by Country Worldwide</h1>\n    <Table countries={tabledata} />\n    </CardContent>\n    </Card>\n\n</div>\n</div>\n  );\n};\n\nexport default App;\n","E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\index.js",[],["42","43"],"E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\reportWebVitals.js",[],["44","45"],"E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\Map.js",[],["46","47"],"E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\Card1.js",[],"E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\Table.js",[],"E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\Graph.js",["48"],"import React, {useEffect, useState} from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\n\r\nconst Graph = () => {\r\n    const [ data, setData ] = useState({})\r\n    // https://disease.sh/v3/covid-19/historical/all?lastdays=120\r\n\r\n     useEffect(() =>{\r\n      fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").\r\n      then((res) => res.json())\r\n      .then((data) =>{\r\n          setData(data)\r\n      })\r\n     }, [])\r\n\r\n    return (\r\n        <div className=\"graph__head\">\r\n            <Line \r\n                data = {data}\r\n                options\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph;\r\n","E:\\REACT__2020__PROJECT__COVID\\covid19\\src\\components\\util.js",[],{"ruleId":"49","severity":1,"message":"50","line":3,"column":59,"nodeType":"51","messageId":"52","endLine":3,"endColumn":63},{"ruleId":"49","severity":1,"message":"53","line":7,"column":8,"nodeType":"51","messageId":"52","endLine":7,"endColumn":13},{"ruleId":"49","severity":1,"message":"54","line":9,"column":10,"nodeType":"51","messageId":"52","endLine":9,"endColumn":24},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"55","replacedBy":"61"},{"ruleId":"57","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":9,"column":74,"nodeType":"65","messageId":"66","endLine":9,"endColumn":75,"fix":"67"},"no-unused-vars","'Zoom' is defined but never used.","Identifier","unusedVar","'Graph' is defined but never used.","'startingnumber' is defined but never used.","no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],["68"],["69"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"70","text":"71"},"no-global-assign","no-unsafe-negation",[324,333],"\r\n      ."]